name: Release

env:
  CARGO_TERM_COLOR: always

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: false
        default: ""

jobs:
  build_linux_streamer:
    runs-on: ubuntu-20.04
    needs: []
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build and install dependencies
        env:
          RUST_BACKTRACE: 1
        run: |
          sudo apt-get update
          sudo apt-get install libfuse2 build-essential pkg-config nasm libva-dev libdrm-dev libvulkan-dev libx264-dev libx265-dev cmake libasound2-dev libjack-jackd2-dev libxrandr-dev libunwind-dev libffmpeg-nvenc-dev nvidia-cuda-toolkit libgtk-3-dev
          cp alvr/xtask/deb/cuda.pc /usr/share/pkgconfig
          cargo xtask prepare-deps --platform linux

      - name: Build and package ALVR (.tar.gz)
        id: build
        env:
          RUST_BACKTRACE: 1
        run: cargo xtask package-streamer --gpl
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          
      - name: Upload streamer for Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./build/alvr_streamer_linux.tar.gz
          asset_name: alvr_streamer_linux.tar.gz
          asset_content_type: application/gzip


